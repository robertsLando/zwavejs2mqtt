#!/usr/bin/env node

/**
 * Module dependencies.
 */
const reqlib = require('app-root-path').require
const jsonStore = reqlib('/lib/jsonStore.js')
const store = reqlib('/config/store.js')
const conf = reqlib('/config/app.js')

console.log(`
 ______                       _     ___                  _   _   
|___  /                      (_)   |__ \\                | | | |  
   / /_      ____ ___   _____ _ ___   ) |_ __ ___   __ _| |_| |_ 
  / /\\ \\ /\\ / / _\` \\ \\ / / _ \\ / __| / /| '_ \` _ \\ / _\` | __| __|
 / /__\\ V  V / (_| |\\ V /  __/ \\__ \\/ /_| | | | | | (_| | |_| |_ 
/_____|\\_/\\_/ \\__,_| \\_/ \\___| |___/____|_| |_| |_|\\__, |\\__|\\__|
                            _/ |                      | |        
                           |__/                       |_|        
`)

// jsonstore is a singleton instance that handles the json configuration files
// used in the application. Init it before anything else than start app.
// if jsonstore fails exit the application
jsonStore.init(store)
  .then(() => {
    const { app, startServer } = reqlib('app.js')

    /**
     * Normalize a port into a number, string, or false.
     */

    function normalizePort (val) {
      const port = parseInt(val, 10)

      if (isNaN(port)) {
        // named pipe
        return val
      }

      if (port >= 0) {
        // port number
        return port
      }

      return false
    }

    /**
     * Get port from environment and store in Express.
     */

    const port = normalizePort(process.env.PORT || conf.port)
    app.set('port', port)

    const host = process.env.HOST || conf.host || '0.0.0.0'

    return startServer(host, port)
  })
  .catch(err => {
    console.error(err)
    process.exit(1)
  })
