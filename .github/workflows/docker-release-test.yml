name: Docker Release - Test

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch'
        required: true
      tag:
        description: 'Tag'
        required: true
        default: 'test'

jobs:
  build-push:
    permissions:
      packages: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch everything
          ref: ${{ github.event.inputs.branch }}

      - uses: docker/setup-buildx-action@v1.3.0
      - uses: docker/setup-qemu-action@v1.2.0

      - name: Login to dockerhub
        uses: docker/login-action@v2.0.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to Github Packages
        uses: docker/login-action@v2.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Docker Meta
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: zwavejs/zwavejs2mqtt,ghcr.io/zwave-js/zwavejs2mqtt
          tags: |
            ${{ github.event.inputs.tag }}
          flavor: |
            latest=false
          labels: |
            org.opencontainers.image.vendor=zwave-js
            org.opencontainers.image.documentation=https://zwave-js.github.io/zwavejs2mqtt/#/
            org.opencontainers.image.authors=Daniel Lando <daniel.sorridi@gmail.com>
            org.opencontainers.image.url=https://zwave-js.github.io/zwavejs2mqtt/#/
            maintainer=robertsLando

      - name: build+push
        uses: docker/build-push-action@v2
        with:
          platforms: linux/arm64,linux/amd64,linux/arm/v6,linux/arm/v7
          file: docker/Dockerfile
          context: . # without this it will use master instead of the selected branch
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
